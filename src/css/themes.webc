---
permalink: "/css/themes.css"
excludeFromSitemap: true
---

<script webc:type="js">
  const { transform } = require("lightningcss");
  const lightningcssConfig = require("./11ty/css/config");

  const getThemeVars = (variant) => {
    let css = "";

    function outputVars(theme) {
      let vars = "";

      for (let prop in theme[variant]) {
        vars += `--color-${prop}: ${theme[variant][prop]};`;
      }

      return vars;
    }

    function outputThemeVars(theme) {
      return `[data-theme="${theme.name}"] { 
        ${outputVars(theme)}
      }`;
    }

    $data.themes.map((theme, index) => {
      if (index === 0) {
        css += outputVars(theme);
        css += outputThemeVars(theme);
      } else {
        css += outputThemeVars(theme);
      }
    });

    return css;
  };

  let result = `
    :where(html) {
      ${getThemeVars("light")}
    }

    @media (prefers-color-scheme: dark) {
      :where(html:not([data-appearance])) {
        ${getThemeVars("dark")}
      }
    }

    [data-appearance="light"] {
      ${getThemeVars("light")}
    }

    [data-appearance="dark"] {
      ${getThemeVars("dark")}
    }
  `;

  let { code } = transform({
    code: Buffer.from(result),
    ...lightningcssConfig,
  });

  code;
</script>
