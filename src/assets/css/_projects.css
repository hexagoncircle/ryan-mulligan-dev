/* Projects */
.projects-container {
  --outline-offset: 2px;
  --space: var(--space-xl);
  grid-column: full;
  display: grid;
  grid-template-columns: inherit;
  margin-block-end: calc(var(--space-xs) * -1 - 1ex);
  overflow-y: hidden;
}

.projects-container > * {
  grid-column: content;
}

.projects {
  display: flex;
  position: relative;
  padding-block: var(--space-lg) calc(var(--space-lg) + 1ex);
  gap: clamp(var(--page-padding) / 2, 4vw, var(--page-padding));
  width: 100%;
}

.projects::after {
  content: "";
  align-self: stretch;
  padding-inline-end: max(
    var(--page-padding),
    (100vw - var(--page-max-width)) / 2 - var(--page-padding)
  );
}

#projects-focus-text {
  visibility: hidden;
  position: absolute;
  top: calc(100% + var(--space-xs));
  display: inline-flex;
  justify-content: space-between;
  gap: var(--space-2xs);
  width: 100%;
  font-size: var(--font--1);
}

.current:focus-within #projects-focus-text {
  visibility: visible;
}

.projects.active #projects-focus-text {
  visibility: hidden;
}

.projects .item {
  --duration: 250ms;
  --x: 0;
  --y: 0;
  --t: 40;

  flex: 1 0 auto;
  position: relative;
  inline-size: min(300px + 5vw, 100%);
  perspective: 500px;
  transform-style: preserve-3d;
  scroll-snap-align: center;
}

.projects .item a {
  display: block;
  scroll-margin-top: var(--space-2xl);
  transform-style: preserve-3d;
  transition: transform 250ms cubic-bezier(0.34, 1.85, 0.66, 1);
  overflow: hidden;
  border-radius: var(--radius-md);
  background-color: var(--color-bg-accent);
}

.projects .item a::before {
  content: "";
  display: block;
  top: 1px;
  left: 1px;
  width: calc(100% - 2px);
  height: calc(100% - 2px);
  background: var(--color-bg-accent);
}

.projects .item img {
  object-fit: cover;
  aspect-ratio: 16/9;
  top: -2px;
  left: -2px;
  width: calc(100% + 4px);
  height: calc(100% + 4px);
  transform-style: preserve-3d;
  transform: translate3d(0, 0, 0);
  transition: var(--duration) var(--ease);
  transition-property: transform, opacity;
  border-radius: inherit;
  pointer-events: none;
}

@media (hover: hover) and (pointer: fine) {
  .projects .item a::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: auto;
    z-index: 1;
    width: 50%;
    height: 0;
    padding-bottom: 50%;
    border-radius: 100%;
    background: white;
    pointer-events: none;
    filter: blur(60px);
    opacity: 0;
    transform-style: preserve-3d;
    transform: translate3d(0, 0, 0);
    transition: opacity var(--duration) var(--ease),
      transform 0s var(--duration);
    will-change: transform, opacity;
  }

  .projects .item:hover {
    z-index: 1;
  }

  .projects .item:hover a,
  .projects:not(:hover) a:focus-visible {
    transition-timing-function: var(--ease);
    transform: translate3d(
        calc(var(--x) / var(--t) * 3px),
        calc(var(--y) / var(--t) * 2px),
        2rem
      )
      rotateX(calc(var(--y) / var(--t) * -1deg))
      rotateY(calc(var(--x) / var(--t) * 1deg));
  }

  .projects .item:hover a::after {
    opacity: 0.2;
    transform: translate3d(calc(var(--x) * 1px), calc(var(--y) * 1px), 1rem);
    transition: opacity var(--duration) var(--ease),
      transform var(--duration) var(--ease);
  }

  .projects .item:hover img {
    transform: scale(1.04)
      translate(
        calc(var(--x) / var(--t) * 1px),
        calc(var(--y) / var(--t) * 1px)
      )
      rotateX(calc(var(--y) / var(--t) * -1deg))
      rotateY(calc(var(--x) / var(--t) * 1deg));
  }
}
