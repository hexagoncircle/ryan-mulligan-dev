/* Projects */
.projects {
  position: relative;
  margin-bottom: calc(var(--space-sm) * -1);
  padding: var(--page-padding);
  width: 100%;
}

.projects::after {
  content: "";
  display: block;
  flex: 0 0 var(--page-padding);
}

.projects .mark {
  position: relative;
  align-self: center;
  align-items: center;
  margin-right: var(--page-padding);
}

.icon-codepen {
  display: flex;
}

.icon-codepen::before,
.icon-codepen::after {
  --offset: 8px;
  position: absolute;
  top: 50%;
  font-size: clamp(2rem, 3vw, 4rem);
  transform: translateY(-50%);
  white-space: nowrap;
  z-index: 1;
  pointer-events: none;
  transition: color var(--duration) var(--ease);
}

.icon-codepen::before {
  content: "•";
  content: "•" / "";
  right: calc(100% + var(--offset));
}

.icon-codepen::after {
  content: "• • •";
  content: "• • •" / "";
  left: calc(100% + var(--offset));
}

.icon-codepen svg {
  width: clamp(4rem, 6vw, 7rem);
  height: clamp(4rem, 6vw, 7rem);
  fill: var(--color-secondary);
  transition: fill var(--duration) var(--ease);
}

.icon-codepen:hover svg,
.icon-codepen:focus svg {
  fill: var(--color-text);
}

.projects .item {
  --duration: 250ms;
  --x: 0;
  --y: 0;
  --t: 40;

  flex: 1 0 auto;
  position: relative;
  width: clamp(260px, 26vw, 500px);
  perspective: 500px;
  transform-style: preserve-3d;
}

.projects .item a {
  display: block;
  aspect-ratio: 16/9;
  transform-style: preserve-3d;
  transition: transform 250ms cubic-bezier(0.34, 1.85, 0.66, 1);
  overflow: hidden;
  border-radius: var(--border-radius);

  &::before {
    content: "";
    display: block;
    top: 1px;
    left: 1px;
    width: calc(100% - 2px);
    height: calc(100% - 2px);
    background: var(--color-bg-accent);
  }
}

.projects .item + .item {
  margin-left: clamp(var(--space-base), 1.5vw, var(--page-padding));
}

.projects .item img {
  position: absolute;
  object-fit: cover;
  top: -1px;
  left: -1px;
  width: calc(100% + 2px);
  height: calc(100% + 2px);
  transform-style: preserve-3d;
  transform: translate3d(0, 0, 0);
  transition: opacity var(--duration) var(--ease),
    transform var(--duration) var(--ease);
  border-radius: var(--border-radius);
  will-change: transform;
}

@media (hover: hover) and (pointer: fine) {
  .projects .item a::after {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: auto;
    z-index: 1;
    width: 50%;
    height: 0;
    padding-bottom: 50%;
    border-radius: 100%;
    background: white;
    pointer-events: none;
    filter: blur(60px);
    opacity: 0;
    transform-style: preserve-3d;
    transform: translate3d(0, 0, 0);
    transition: opacity var(--duration) var(--ease),
      transform 0s var(--duration);
    will-change: transform, opacity;
  }

  .projects .item:hover a {
    transition-timing-function: var(--ease);
    transform: translate3d(
        calc(var(--x) / var(--t) * 1px),
        calc(var(--y) / var(--t) * 1px),
        2rem
      )
      rotateX(calc(var(--y) / var(--t) * -1deg))
      rotateY(calc(var(--x) / var(--t) * 1deg));
  }

  .projects .item:hover a::after {
    opacity: 0.2;
    transform: translate(calc(var(--x) * 1px), calc(var(--y) * 1px));
    transition: opacity var(--duration) var(--ease),
      transform var(--duration) var(--ease);
  }

  .projects .item:hover img {
    transform: scale(1.04)
      translate(
        calc(var(--x) / var(--t) * 1px),
        calc(var(--y) / var(--t) * 1px)
      );
  }
}
