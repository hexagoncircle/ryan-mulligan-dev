<is-land on:interaction webc:root="override">
  <snow-fall-toggle>
    <button class="text-label">
      <inline-svg class="icon" aria-hidden="true" src="./public/icons/snowflake.svg"></inline-svg>
      <span>Let it snow</span>
    </button>
  </snow-fall-toggle>

  <template data-island>
    <script type="module" src="/js/snow-fall.js" webc:keep></script>
    <snow-fall style="--snow-fall-color: var(--color-theme-offset)"></snow-fall>
  </template>
</is-land>

<script>
  class SnowFallToggle extends HTMLElement {
    connectedCallback() {
      let button = this.querySelector("button");

      function handleClick() {
        button.classList.add("activated");
        button.removeEventListener("click", handleClick);
      }

      button.addEventListener("click", handleClick);
    }
  }

  if ("customElements" in window) {
    window.customElements.define("snow-fall-toggle", SnowFallToggle);
  }
</script>

<style webc:scoped="snow-machine">
  :host:not(:defined) {
    display: none;
  }

  :host {
    --_duration: 200ms;
    --_delay: 600ms;
    --_ease: ease-out;
  }

  @supports (animation-timing-function: linear(0, 1)) {
    :host {
      --_duration: 1s;
      /* prettier-ignore */
      --_ease: linear(
        0, 1.1144 8.49%, 1.2959 10.7%, 1.3705 12.94%, 1.3643 14.48%, 1.3151 16.2%,
        0.941 24.01%, 0.8694 27.84%, 0.8824 30.71%, 1.0122 38.33%, 1.046 42.71%,
        0.9839 57.54%, 1.0056 72.24%, 1
      );
    }
  }

  button {
    position: fixed;
    right: var(--page-gutters);
    bottom: var(--page-gutters);
    color: inherit;
    display: flex;
    align-items: center;
    gap: var(--space-3xs);
    padding: var(--space-3xs);
    padding-inline-end: var(--space-xs);
    background-color: var(--color-theme);
    border: 2px solid var(--color-theme-accent);
    border-radius: var(--radius-pill);
  }

  button:not(.activated) {
    cursor: pointer;
    opacity: 0;
    animation: appear var(--_duration) var(--_delay) var(--_ease) forwards,
      fade-in 200ms var(--_delay) ease-out forwards;
  }

  button.activated {
    pointer-events: none;
    animation: disappear 1.4s ease-out forwards;
  }

  button:not(.activated):active {
    translate: 0 1px;
  }

  button svg {
    --icon-size: 2em;
    place-self: center;
  }

  @keyframes appear {
    from {
      translate: 0 40%;
    }
  }

  @keyframes disappear {
    30% {
      background-color: transparent;
    }
    60% {
      border-color: transparent;
    }
    100% {
      opacity: 0;
    }
  }
</style>
